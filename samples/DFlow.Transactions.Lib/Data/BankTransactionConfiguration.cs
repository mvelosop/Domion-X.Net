//------------------------------------------------------------------------------
//  BankTransactionConfiguration.cs
//
//  Implementation of: BankTransactionConfiguration (Class) <<entity-configuration>>
//  Generated by Domion-MDA - http://www.coderepo.blog/domion
//
//  Created on     : 02-jun-2017 10:49:07
//  Original author: Miguel
//------------------------------------------------------------------------------

using DFlow.Budget.Core.Model;
using DFlow.Budget.Lib.Data;
using DFlow.Transactions.Core.Model;
using Domion.Lib.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace DFlow.Transactions.Lib.Data
{
	public class BankTransactionConfiguration : EntityTypeConfiguration<BankTransaction>
	{
		public override void Map(EntityTypeBuilder<BankTransaction> builder)
		{
			builder.ToTable("BankTransactions", schema: "Transactions");

			builder.HasKey(bt => bt.Id);

			builder.Property(bt => bt.RowVersion)
				.IsRowVersion();

			builder.HasOne<BankAccount>(bt => bt.BankAccount)
				.WithMany(ba => ba.Transactions)
				.HasForeignKey(bt => bt.BankAccount_Id)
				.OnDelete(DeleteBehavior.Cascade);

			// External etities

			builder.HasOne<BudgetLine>(bt => bt.BudgetLine)
				.WithMany()
				.HasForeignKey(bt => bt.BudgetLine_Id)
				.OnDelete(DeleteBehavior.Restrict);
		}
	}
}