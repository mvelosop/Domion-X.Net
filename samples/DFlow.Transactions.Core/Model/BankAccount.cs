//------------------------------------------------------------------------------
//  BankAccount.cs
//
//  Implementation of: BankAccount (Class) <<ef-entity>>
//  Generated by Domion-MDA - http://www.coderepo.blog/domion
//
//  Created on     : 02-jun-2017 10:49:06
//  Original author: Miguel
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace DFlow.Transactions.Core.Model
{
    public class BankAccount
    {
        public BankAccount()
        {
            Transactions = new HashSet<BankTransaction>();
        }

        [MaxLength(250)] // Default string length
        public virtual string AccountName { get; set; } // Key data ----------

        [Required]
        [MaxLength(50)]
        public virtual string AccountNumber { get; set; }

        [Required]
        [MaxLength(250)] // Default string length
        public virtual string BankName { get; set; }

        public virtual decimal CurrentBalance { get; set; }

        public int Id { get; set; }

        public virtual decimal InitialBalance { get; set; }

        public virtual DateTime? InitialBalanceDate { get; set; }

        public virtual DateTime? LastTransactionDate { get; set; }

        public virtual int LastTransactionNumber { get; set; }

        public virtual Byte[] RowVersion { get; set; }

        public virtual ICollection<BankTransaction> Transactions { get; set; }

        ///
        /// <param name="transaction"></param>
        public IEnumerable<ValidationResult> AddTransaction(BankTransaction transaction)
        {
            //TODO: Implementar método: BankAccount.AddTransaction
            return null;
        }

        ///
        /// <param name="transaction"></param>
        public IEnumerable<ValidationResult> RemoveTransaction(BankTransaction transaction)
        {
            //TODO: Implementar método: BankAccount.RemoveTransaction
            return null;
        }
    }
}
